terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "3.48"
    }
  }
}

resource "aws_acm_certificate" "cert" {
  domain_name       = var.domain_name
  validation_method = "DNS"

  options {
    certificate_transparency_logging_preference = "ENABLED"
  }

  lifecycle {
    create_before_destroy = true
  }

  tags = merge(
    var.common_tags,
    tomap(
      { "Name" = "${var.project}-${var.function}-${local.environment}" }
    )
  )
}

//Convert set to list to prevent resources being regenerated by AWS provider upgrade to 3.48: https://registry.terraform.io/providers/hashicorp/aws/latest/docs/guides/version-3-upgrade#resource-aws_acm_certificate
//Other option is to manually adjust state using 'terraform mv' to change resource addresses to new resources
//Set to list least risky option. If more than one resource added to list then will need to reassess
//See here for details of issue: https://stackoverflow.com/questions/63235321/aws-acm-certificate-seems-to-have-changed-its-state-output-possibly-due-to-a-pro
resource "aws_route53_record" "cert_validation" {
  name    = tolist(aws_acm_certificate.cert.domain_validation_options).0.resource_record_name
  type    = tolist(aws_acm_certificate.cert.domain_validation_options).0.resource_record_type
  zone_id = data.aws_route53_zone.zone.zone_id
  records = [tolist(aws_acm_certificate.cert.domain_validation_options).0.resource_record_value]
  ttl     = 60
}

resource "aws_acm_certificate_validation" "cert" {
  certificate_arn         = aws_acm_certificate.cert.arn
  validation_record_fqdns = [aws_route53_record.cert_validation.fqdn]
}
